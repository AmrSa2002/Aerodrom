// <auto-generated />
using System;
using Aviokompanija.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aviokompanija.Migrations
{
    [DbContext(typeof(AviokompanijaDbContext))]
    partial class AviokompanijaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aviokompanija.Models.Avion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Automobil");
                });

            modelBuilder.Entity("Aviokompanija.Models.Destinacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Destinacija");
                });

            modelBuilder.Entity("Aviokompanija.Models.Karta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojSjedista")
                        .HasColumnType("int");

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Klasa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LetId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LetId");

                    b.ToTable("Karta");
                });

            modelBuilder.Entity("Aviokompanija.Models.Let", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvionId")
                        .HasColumnType("int");

                    b.Property<int>("BrojSlobodnihMjesta")
                        .HasColumnType("int");

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<int>("DestinacijaId")
                        .HasColumnType("int");

                    b.Property<int>("MjestoPolaskaIDDestinacije")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemePolijetanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VrijemeSlijetanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("VrstaLeta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AvionId");

                    b.HasIndex("DestinacijaId");

                    b.ToTable("Let");
                });

            modelBuilder.Entity("Aviokompanija.Models.Putnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojKreditneKartice")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Putnik");
                });

            modelBuilder.Entity("Aviokompanija.Models.Radnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Plata")
                        .HasColumnType("float");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Radnik");
                });

            modelBuilder.Entity("Aviokompanija.Models.Recenzija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImeIPrezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("PutnikId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PutnikId");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("Aviokompanija.Models.Rezervacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime2");

                    b.Property<int>("KartaId")
                        .HasColumnType("int");

                    b.Property<int>("PutnikId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KartaId");

                    b.HasIndex("PutnikId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("Aviokompanija.Models.Karta", b =>
                {
                    b.HasOne("Aviokompanija.Models.Let", "Let")
                        .WithMany("Karte")
                        .HasForeignKey("LetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aviokompanija.Models.Let", b =>
                {
                    b.HasOne("Aviokompanija.Models.Avion", "Avion")
                        .WithMany()
                        .HasForeignKey("AvionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aviokompanija.Models.Destinacija", "Destinacija")
                        .WithMany()
                        .HasForeignKey("DestinacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aviokompanija.Models.Recenzija", b =>
                {
                    b.HasOne("Aviokompanija.Models.Putnik", "Putnik")
                        .WithMany()
                        .HasForeignKey("PutnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aviokompanija.Models.Rezervacija", b =>
                {
                    b.HasOne("Aviokompanija.Models.Karta", "Karta")
                        .WithMany()
                        .HasForeignKey("KartaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aviokompanija.Models.Putnik", "Putnik")
                        .WithMany()
                        .HasForeignKey("PutnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
